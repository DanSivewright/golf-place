/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User
    media: Media
    pages: Page
    categories: Category
    events: Event
    "payload-preferences": PayloadPreference
    "payload-migrations": PayloadMigration
  }
  globals: {
    menu: Menu
  }
}
export interface User {
  id: string
  updatedAt: string
  createdAt: string
  email: string
  resetPasswordToken?: string | null
  resetPasswordExpiration?: string | null
  salt?: string | null
  hash?: string | null
  loginAttempts?: number | null
  lockUntil?: string | null
  password: string | null
}
export interface Media {
  id: string
  alt: string
  updatedAt: string
  createdAt: string
  url?: string | null
  filename?: string | null
  mimeType?: string | null
  filesize?: number | null
  width?: number | null
  height?: number | null
  sizes?: {
    card?: {
      url?: string | null
      width?: number | null
      height?: number | null
      mimeType?: string | null
      filesize?: number | null
      filename?: string | null
    }
    portrait?: {
      url?: string | null
      width?: number | null
      height?: number | null
      mimeType?: string | null
      filesize?: number | null
      filename?: string | null
    }
    square?: {
      url?: string | null
      width?: number | null
      height?: number | null
      mimeType?: string | null
      filesize?: number | null
      filename?: string | null
    }
    feature?: {
      url?: string | null
      width?: number | null
      height?: number | null
      mimeType?: string | null
      filesize?: number | null
      filename?: string | null
    }
  }
}
export interface Page {
  id: string
  slug?: string | null
  title: string
  hero?:
    | (
        | {
            title: string
            body?:
              | {
                  [k: string]: unknown
                }[]
              | null
            links?:
              | {
                  link: {
                    type?: ("reference" | "custom") | null
                    newTab?: boolean | null
                    appearance?:
                      | (
                          | "secondary"
                          | "ghost"
                          | "link"
                          | "destructive"
                          | "default"
                        )
                      | null
                    size?: ("xs" | "sm" | "default" | "lg" | "xl") | null
                    reference?: {
                      relationTo: "pages"
                      value: string | Page
                    } | null
                    url?: string | null
                    label: string
                  }
                  id?: string | null
                }[]
              | null
            id?: string | null
            blockName?: string | null
            blockType: "short-heading-hero"
          }
        | {
            title: string
            body?:
              | {
                  [k: string]: unknown
                }[]
              | null
            links?:
              | {
                  link: {
                    type?: ("reference" | "custom") | null
                    newTab?: boolean | null
                    appearance?:
                      | (
                          | "secondary"
                          | "ghost"
                          | "link"
                          | "destructive"
                          | "default"
                        )
                      | null
                    size?: ("xs" | "sm" | "default" | "lg" | "xl") | null
                    reference?: {
                      relationTo: "pages"
                      value: string | Page
                    } | null
                    url?: string | null
                    label: string
                  }
                  id?: string | null
                }[]
              | null
            image: string | Media
            fullscreen?: boolean | null
            position?: string | null
            id?: string | null
            blockName?: string | null
            blockType: "image-hero"
          }
      )[]
    | null
  layout: (
    | {
        invertBackground?: boolean | null
        columns?:
          | {
              size?: ("oneThird" | "half" | "twoThirds" | "full") | null
              richText: {
                [k: string]: unknown
              }[]
              enableLink?: boolean | null
              link?: {
                type?: ("reference" | "custom") | null
                newTab?: boolean | null
                appearance?:
                  | ("secondary" | "ghost" | "link" | "destructive" | "default")
                  | null
                size?: ("xs" | "sm" | "default" | "lg" | "xl") | null
                reference?: {
                  relationTo: "pages"
                  value: string | Page
                } | null
                url?: string | null
                label: string
              }
              id?: string | null
            }[]
          | null
        id?: string | null
        blockName?: string | null
        blockType: "content"
      }
    | {
        mediaBlockBackgroundColor?: ("white" | "black") | null
        position?: ("default" | "fullscreen") | null
        media: string | Media
        id?: string | null
        blockName?: string | null
        blockType: "mediaBlock"
      }
    | {
        invertBackground?: boolean | null
        richText: {
          [k: string]: unknown
        }[]
        links?:
          | {
              link: {
                type?: ("reference" | "custom") | null
                newTab?: boolean | null
                appearance?:
                  | ("secondary" | "ghost" | "link" | "destructive" | "default")
                  | null
                size?: ("xs" | "sm" | "default" | "lg" | "xl") | null
                reference?: {
                  relationTo: "pages"
                  value: string | Page
                } | null
                url?: string | null
                label: string
              }
              id?: string | null
            }[]
          | null
        id?: string | null
        blockName?: string | null
        blockType: "cta"
      }
    | {
        richText: {
          [k: string]: unknown
        }[]
        populateBy?: ("collection" | "selection") | null
        relationTo?: "pages" | null
        categories?: (string | Category)[] | null
        limit?: number | null
        selectedDocs?:
          | (
              | {
                  relationTo: "pages"
                  value: string | Page
                }
              | {
                  relationTo: "events"
                  value: string | Event
                }
            )[]
          | null
        populatedDocs?:
          | (
              | {
                  relationTo: "pages"
                  value: string | Page
                }
              | {
                  relationTo: "events"
                  value: string | Event
                }
            )[]
          | null
        populatedDocsTotal?: number | null
        id?: string | null
        blockName?: string | null
        blockType: "archive"
      }
  )[]
  updatedAt: string
  createdAt: string
}
export interface Category {
  id: string
  title?: string | null
  updatedAt: string
  createdAt: string
}
export interface Event {
  id: string
  slug?: string | null
  title: string
  image?: string | Media | null
  date: string
  categories?: (string | Category)[] | null
  description?:
    | {
        [k: string]: unknown
      }[]
    | null
  updatedAt: string
  createdAt: string
}
export interface PayloadPreference {
  id: string
  user: {
    relationTo: "users"
    value: string | User
  }
  key?: string | null
  value?:
    | {
        [k: string]: unknown
      }
    | unknown[]
    | string
    | number
    | boolean
    | null
  updatedAt: string
  createdAt: string
}
export interface PayloadMigration {
  id: string
  name?: string | null
  batch?: number | null
  updatedAt: string
  createdAt: string
}
export interface Menu {
  id: string
  nav?:
    | {
        link: {
          type?: ("reference" | "custom") | null
          newTab?: boolean | null
          appearance?:
            | ("secondary" | "ghost" | "link" | "destructive" | "default")
            | null
          size?: ("xs" | "sm" | "default" | "lg" | "xl") | null
          reference?: {
            relationTo: "pages"
            value: string | Page
          } | null
          url?: string | null
          label: string
        }
        id?: string | null
      }[]
    | null
  updatedAt?: string | null
  createdAt?: string | null
}

export interface Collection {
  totalDocs: number
  limit: number
  totalPages: number
  page: number
  pagingCounter: number
  hasPrevPage: boolean
  hasNextPage: boolean
  prevPage: number | null
  nextPage: number | null
}

export interface Global {
  id: string
  updatedAt: string
  createdAt: string
  globalType: string
}
